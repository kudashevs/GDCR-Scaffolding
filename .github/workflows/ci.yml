
name: run tests on projects

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test-groovy:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: run unit tests
        run: ./gradlew test
        working-directory: groovy

  test-java:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: run unit tests
        run: ./gradlew test
        working-directory: java

  test-python:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: run unit tests
        run: python test_gol.py
        working-directory: python

  test-ruby:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: run unit tests
        run: rake test
        working-directory: ruby

  test-c:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: run unit tests
        run: ./run_tests.sh
        working-directory: c

  test-golang:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: get Go 
        uses: actions/setup-go@v3

      - name: init module
        run: go mod init golang 
        working-directory: golang

      - name: run unit tests
        run: go test
        working-directory: golang/src/life

  test-clojure:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@10.0
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.10.1.693              # Clojure CLI based on tools.deps
          lein: 2.9.1                  # Leiningen

      - name: run unit tests
        run: lein test
        working-directory: clojure

  test-scala:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: run unit tests
        run: ./gradlew test
        working-directory: scala

  test-javascript:
    runs-on: ubuntu-latest

    steps:
      - name: get code
        uses: actions/checkout@v3

      - name: install
        run: npm install
        working-directory: javascript

      - name: test
        run: npm run test-single-run
        working-directory: javascript

# --------------------------------------

# not working: project is based on ancient Mono and not Dotnet Core (!!)
#
#  test-csharp:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: get code
#        uses: actions/checkout@v3
#
#      - name: setup dotnet core
#        uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: '3.1.x'
#
#      - name: run unit tests
#        run: ./run_tests.sh
#        working-directory: csharp

# not working due to ancient project layout (not supported)
#
#  test-swift:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: get code
#        uses: actions/checkout@v3
#
#      - name: run unit tests
#        run: ./test.sh
#        working-directory: swift
